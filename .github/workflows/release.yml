name: Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *" # every morning at 1:00

env:
  PYTHON_VERSION: 3.12
  CONTAINER_REGISTRY: ghcr.io
  IMAGE_NAME: stevebinary/cyberchef

permissions:
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Check for complete release
        id: is_complete_release
        run: echo "is_complete_release=$(python is_complete_release.py)" >> $GITHUB_OUTPUT

      - name: Get current CyberChef version
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        run: |-
          echo "CURRENT_VERSION=$(python get_current_version.py)" >> $GITHUB_ENV
          source $GITHUB_ENV
          echo ${{ env.CURRENT_VERSION }}

      - name: Get CyberChef download URL
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        run: |-
          echo "DOWNLOAD_URL=$(python get_download_url.py)" >> $GITHUB_ENV
          source $GITHUB_ENV
          echo ${{ env.DOWNLOAD_URL }}

      - name: Download, unzip and prepare the index.html
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        run: |-
          wget ${{ env.DOWNLOAD_URL }} -O ./cyberchef.zip
          unzip ./cyberchef.zip -d ./cyberchef
          mv ./cyberchef/CyberChef_*.html ./cyberchef/index.html

      - name: Set up QEMU
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: ${{ steps.is_complete_release.outputs.is_complete_release == 'yes' }}
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          platforms: linux/amd64,linux/arm64
          tags: >-
            ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.CURRENT_VERSION }},
            ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  delete-untagged-images:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Delete untagged images
        uses: actions/delete-package-versions@v5
        with:
          package-name: cyberchef
          package-type: container
          min-versions-to-keep: 0
          delete-only-untagged-versions: true
